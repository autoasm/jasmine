// Class automatically generated by Dev-C++ New Class wizard

#ifndef FIELDINFO_H
#define FIELDINFO_H

#include "attributecontainer.h" // inheriting class's header file


// No description
class FieldInfo : public AttributeContainer {

    typedef GenericAttribute* AttributeElement;

    public:
      static const u2 PUBLIC  = 0x0001;
      static const u2 PRIVATE = 0x0002;
      static const u2 PROTECTED = 0x0004;
      static const u2 STATIC  = 0x0008;
      static const u2 FINAL   = 0x0010;
      static const u2 VOLATILE  = 0x0040;
      static const u2 TRANSIENT = 0x0080;


    protected:
		/*! Access flag */
        u2 accessFlag;
		/*! Name index */
        u2 nameIndex;
		/*! Signature index of field */
        u2 signatureIndex;
		/*! Attributes Count */
        u2 attributesCount;

        AttributeElement* attributes;

        void initAttributes();

	public:
		// class constructor
		FieldInfo();
		// class destructor
		virtual ~FieldInfo();

		/*! Get Access Flag */
		inline u2 getAccessFlag() { return accessFlag;};
		/*! Set Access Flag */
		inline void setAccessFlag(u2 x) { accessFlag = x;};

		/*! Get Name index */
		inline u2 getNameIndex() { return nameIndex;};
		/*! Set Name index */
		inline void setNameIndex(u2 _nameIndex) { nameIndex = _nameIndex; };

		/*! Get signature index */
		inline u2 getSignatureIndex() { return signatureIndex; };
		/*! Set signature index */
		inline void setSignatureIndex(u2 _siganature) { signatureIndex = _siganature;};

		/*! Get Attributes Count */
		inline u2 getAttributesCount() { return attributesCount;};
		/*! Set Attributes Count */
		void setAttributesCount(u2 _attributesCount);

		/*! Set Attribute , parameter pos is index of attribute */
        virtual void setAttribute(GenericAttribute* attribute,u2 pos);
		/*! Get Attribute , parameter pos is index of attribute */
        virtual GenericAttribute*getAttribute(u2 pos);

		void serialize(JBuffer* buf, UINT& pos);

};

/*!
	\class FieldInfo
	Class FieldInfo represents container of attributes.
*/

#endif // FIELDINFO_H

