// Class automatically generated by Dev-C++ New Class wizard

#ifndef TOOLKIT_H
#define TOOLKIT_H

#include "classloader.h" // inheriting class's header file
#include "consoleformator.h"

// No description
class ToolKit : public ClassLoader
{
	public:
		// class constructor
		ToolKit();
		// class destructor
		~ToolKit();

                static u1 getLowByte(u2 wordValue);

                static u1 getHighByte(u2 wordValue);

                static u2 getHighWord(u4 doubleWordValue);

                static u2 getLowWord(u4 doubleWordValue);

		/*! Get U1 type value from byte array */
		static u1 memGetU1(BYTE* array, UINT& pos);

		static int memSetU1(BYTE* array, u1 value, UINT size, UINT& pos);

		/*! Get U2 type value from byte array */
		static u2 memGetU2(BYTE* array, UINT& pos);

		static int memSetU2(BYTE* array, u2 value, UINT size, UINT& pos);

		/*! Get U4 type value from byte array */
		static u4 memGetU4(BYTE* array, UINT& pos);

		static int memSetU4(BYTE* array, u4 value, UINT size, UINT& pos);

		/*! Get UTF8 String from byte array*/
		static int memGetUtfString(BYTE* array, UINT& pos, u1*utfString, u2 strLength);

                static int memSetUtfString(BYTE* array, u1* utfString, u2 strLength, UINT size, UINT& pos);

		/*! Get Unicode String from byte array */
		static int memGetUnicodeString(BYTE* array, UINT& pos, u2*unicodeString, u2 strLength);

                static int memSetUnicodeString(BYTE* array, u2* unicodeString, u2 strLength, UINT size, UINT& pos);

		/*! Get byte array from memmory */
		static int memGetU1Array(BYTE* array,UINT& pos, u1*u1Array, u4 u1ArrayLength);

                static int memSetU1Array(BYTE* array, u1*u1Array, u4 u1ArrayLength, UINT size, UINT& pos);

		/*! Create object of ConsoleFormator */
		static IFormator* createConsoleFormator();

		/*! Delete formator object */
		static void destroyFormator(IFormator* formator);
};

/*!
    \class ToolKit
    Class ToolKit is a Helper class.
*/

#endif // TOOLKIT_H

