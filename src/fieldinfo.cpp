// Class automatically generated by Dev-C++ New Class wizard

#include "fieldinfo.h" // class's header file
#include "toolkit.h"
#include <assert.h>
#include <string.h>

// class constructor
FieldInfo::FieldInfo()
{
	// insert your code here
	attributes = (AttributeElement*)0;
}

// class destructor
FieldInfo::~FieldInfo()
{
	// insert your code here
	if(attributes) {
	   delete[] attributes;
    }
}

void FieldInfo::setAttributesCount(u2 _attributesCount) 
{ 
    attributesCount = _attributesCount;
    initAttributes();
}

void FieldInfo::setAttribute(GenericAttribute* attribute,u2 pos)
{
    assert(pos < attributesCount);
    if(attributes) {
        if(attributes[pos]) {
            delete[] attributes[pos];
        }
        attributes[pos] = attribute;
    }
}

GenericAttribute* FieldInfo::getAttribute(u2 pos)
{
    assert(pos < attributesCount);
    GenericAttribute* ret = (GenericAttribute*)0;
    if(attributes) {
        ret = attributes[pos];
    }
    return ret;
}

void FieldInfo::initAttributes()
{
    attributes = new AttributeElement[attributesCount];
    memset(attributes,0,sizeof(AttributeElement)*attributesCount);
}

void FieldInfo::serialize(JBuffer* buf, UINT& pos) {
	/*
	field_info {
    		u2 access_flags;
    		u2 name_index;
    		u2 descriptor_index;
    		u2 attributes_count;
    		attribute_info attributes[attributes_count];
	}
	*/
	ToolKit::memSetU2(buf->getBuffer(), getAccessFlag(), buf->getSize(), pos);
	ToolKit::memSetU2(buf->getBuffer(), getNameIndex(), buf->getSize(), pos);
	ToolKit::memSetU2(buf->getBuffer(), getSignatureIndex(), buf->getSize(), pos);
	ToolKit::memSetU2(buf->getBuffer(), getAttributesCount(), buf->getSize(), pos);
	for(u2 i = 0; i<getAttributesCount(); i++) {
		getAttribute(i)->serialize(buf, pos);
	}
}
